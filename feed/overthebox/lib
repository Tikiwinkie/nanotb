# vim: set ft=sh noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

otb_alert()  { logger -t otb -p 1 "$*" }
otb_crit()   { logger -t otb -p 2 "$*" }
otb_err()    { logger -t otb -p 3 "$*" }
otb_warn()   { logger -t otb -p 4 "$*" }
otb_notice() { logger -t otb -p 5 "$*" }
otb_info()   { logger -t otb -p 6 "$*" }
otb_debug()  { [ -n "$OTB_DEBUG" ] && logger -t otb -p 7 "$*" }

# shellcheck disable=SC2016
otb_pretty_print() {
	# Try to pretty print as json
	local pretty_output=$(jq -e -n --argjson output "$1" '$output' 2>/dev/null)
	if [ $? -eq "0" ]; then
		echo "$pretty_output"
	else
		echo "$1"
	fi
}

otb_json_get() {
	jq -r -n --argjson content "$1" "\$content.$2"
}

otb_call() {
	method=$1
	path=$2
	shift 2
	curl --silent --show-error --max-time 5 \
		-X "$method" \
		-H "Content-Type: application/json" \
		-H "X-Auth-OVH: $OTB_TOKEN" \
		-H "X-Overthebox-Version: $(cat /etc/otb-version || echo 0.0-0)" \
		"https://provisionning.overthebox.net:4443/$path" \
		"$@"
	otb_debug "call: $method $path $* return: $?"
}

otb_device_post() {
	subpath=$1
	shift 1
	otb_call POST "devices/$OTB_DEVICE_ID/$subpath" "$@"
}

otb_device_get() {
	subpath=$1
	shift 1
	otb_call GET "devices/$OTB_DEVICE_ID/$subpath" "$@"
}
