#!/bin/sh
# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

[ -z "$router" ] && exit 0
[ "$INTERFACE" = wan ] || exit 0

case "$1" in
renew|bound)
	;;
*)
	exit 0
	;;
esac

_macaddr=$(cat /sys/class/net/wan/address)
_ifname=$(uci -q get network.wan_dev.ifname)

KNOWN_ROUTER=$(uci show network | grep '\.gateway=' | grep -v '@route' | grep "'$router'")

if [ -z "$KNOWN_ROUTER" ]; then

	if [ "$(uci -q get network.lan.proto)" != "static" ]; then
		uci -q batch <<-EOF
		set network.lan.proto=static
		set network.lan.ipaddr=$ip
		set network.lan.netmask=$subnet
		set network.lan_dev.macaddr=$_macaddr
		set network.wan_dev.macaddr=auto.lan
		commit network
		EOF

		uci -q batch <<-EOF
		set dhcp.lan=dhcp
		set dhcp.lan.interface='lan'
		set dhcp.lan.start='10'
		set dhcp.lan.limit='150'
		set dhcp.lan.leasetime='12h'
		set dhcp.lan.force='true'
		add_list dhcp.lan.tag='!known-othernet'
		commit dhcp
		EOF
	else
		_id=1
		while uci -q get network.if$_id > /dev/null; do _id=$((_id+1)); done

		uci -q batch <<-EOF
		set network.if${_id}_dev=device
		set network.if${_id}_dev.name=if$_id
		set network.if${_id}_dev.type=macvlan
		set network.if${_id}_dev.ifname=$_ifname
		set network.if${_id}_dev.macaddr=$_macaddr
		set network.if${_id}=interface
		set network.if${_id}.ifname=if$_id
		set network.if${_id}.type=macvlan
		set network.if${_id}.proto=static
		set network.if${_id}.ipaddr=$ip
		set network.if${_id}.netmask=$subnet
		set network.if${_id}.multipath=on
		set network.if${_id}.gateway=$router
		set network.if${_id}.dns=$dns
		set network.if${_id}.metric=$_id
		set network.wan_dev.macaddr=auto.if$_id
		add_list firewall.@zone[1].network=if$_id
		commit network
		commit firewall
		EOF

		uci -q batch <<-EOF
		set dhcp.if${_id}=dhcp
		set dhcp.if${_id}.interface='if${_id}'
		set dhcp.if${_id}.start='1'
		set dhcp.if${_id}.leasetime='12h'
		set dhcp.if${_id}.dynamicdhcp='0'
		set dhcp.if${_id}.force='true'
		set dhcp.if${_id}_gw=tag
		add_list dhcp.if${_id}_gw.dhcp_option='1,$subnet'
		add_list dhcp.if${_id}_gw.dhcp_option='3,$router'
		add_list dhcp.if${_id}_gw.dhcp_option='6,$dns'
		commit dhcp
		EOF
	fi

	/etc/init.d/network reload
	/etc/init.d/firewall reload
fi
